options(scipen = 999)
library(dplyr)
library(knitr)
library(xtable)
load("data/home_draw_away.RData")
getwd()
getwd()
knitr::opts_knit$set(root.dir = "../")
options(scipen = 999)
library(dplyr)
library(knitr)
library(xtable)
load("data/home_draw_away.RData")
library(dplyr)
library(tidyr)
library(knitr)
library(xtable)
library(ggplot2)
library(plotly)
load("data/probabilities.RData")
which(is.na(probabilities[,c(46:75)]), arr.ind = TRUE)
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(tidyr)
library(knitr)
library(xtable)
library(ggplot2)
library(plotly)
load("data/probabilities.RData")
# Some scores had p==0, they were replaced with 1/n_sims
# which(is.na(probabilities[,c(46:75)]), arr.ind = TRUE)
probabilities[,c(46:75)][which(is.na(probabilities[,c(46:75)]), arr.ind = TRUE)] = 10^-5
n = nrow(probabilities)
logliks = apply(probabilities[, 16:ncol(probabilities)], 2, function(x) sum(log(x))/n)
m0s = logliks[paste0("p_score_0_", c(0, 15, 30, 45, 60, 75))]
m1s = logliks[paste0("p_score_1_", c(0, 15, 30, 45, 60, 75))]
m2s = logliks[paste0("p_score_2_", c(0, 15, 30, 45, 60, 75))]
m3s = logliks[paste0("p_score_3_", c(0, 15, 30, 45, 60, 75))]
m4s = logliks[paste0("p_score_4_", c(0, 15, 30, 45, 60, 75))]
loglik_score = tibble(Model = c(rep("0", 6), rep("1", 6), rep("2", 6), rep("3", 6), rep("4", 6)),
Minute = rep(c(0, 15, 30, 45, 60, 75), 5),
loglik = c(m0s, m1s, m2s, m3s, m4s))
p1 = loglik_result %>%
ggplot(aes(x = Minute, y = loglik, col = Model)) +
geom_line(size = 1) +
geom_point(size = 2) +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75))
t2 = loglik_score %>%
pivot_wider(names_from = Minute, values_from = loglik)
kable(t2, caption = "Scores")
print(xtable(t2, digits = 4), include.rownames = FALSE)
t1 = loglik_score %>%
pivot_wider(names_from = Minute, values_from = loglik)
kable(t1, caption = "Scores")
print(xtable(t1, digits = 4), include.rownames = FALSE)
p1 = loglik_score %>%
ggplot(aes(x = Minute, y = loglik, col = Model)) +
geom_line(size = 1) +
geom_point(size = 2) +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75))
ggplotly(p1)
source("~/Rproj/football-dynamic-regressors/scoring_rules.R", echo = TRUE)
source("~/Rproj/football-dynamic-regressors/scoring_rules_draw.R", echo = TRUE)
library(dplyr)
load("simulations/probabilities.RData")
load("data/probabilities.RData")
probabilities %>%
arrange(desc(p_score_4_0)) %>%
View()
probabilities %>%
arrange(desc(p_score_4_0)) %>%
View()
probabilities %>%
mutate(dif = (p_result_4_45 - p_result_3_45)/ p_result_3_45) %>%
arrange(desc(dif)) %>%
View()
set.seed(1)
library(dplyr)
library(tidyr)
library(ggplot2)
library(future.apply)
plan(multisession(workers = 12))
source("functions/get_gamestate.R")
source("functions/predict_dynamic_model.R")
load("data/models.RData")
load("data/probabilities.RData")
load("raw-data/results.RData")
load("raw-data/intervals.RData")
n_pred = 10^5
load("data/pred1.RData")
load("data/pred2.RData")
wide = tibble()
scores = c("1-0", "0-0", "2-0", "1-1", "3-0")
for(i in 1:91) {
wide = rbind(wide, pred1[[i]]$Score[scores])
}
wide[is.na(wide)] = 0
names(wide) = scores
wide$Minute = 0:90
long = wide %>%
pivot_longer(cols = scores,
names_to = "Score",
values_to = "Probability")
p = long %>%
mutate(Score = factor(Score, levels = scores)) %>%
ggplot(aes(x = Minute, y = Probability, col = Score)) +
geom_line(linewidth = 1) +
geom_vline(xintercept = 34, linetype = "dashed") +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75, 90)) +
theme(legend.position = c(0.05, 0.95),
legend.justification = c(0, 1),
legend.background = element_rect(fill = "white", color = "black"))
p
ggsave(filename = paste0("plots/Ceará x Paraná.png"),
plot = p, width = 10, height = 5, dpi = 300)
#################################################################################
wide = tibble()
for(i in 1:91) {
wide = rbind(wide, pred2[[i]]$Result)
}
names(wide) = c("Ponte Preta win", "Draw", "Vitória win")
wide$Minute = 0:90
long = wide %>%
pivot_longer(cols = c("Ponte Preta win", "Draw", "Vitória win"),
names_to = "Result",
values_to = "Probability")
p = long %>%
mutate(Result = factor(Result, levels = c("Ponte Preta win", "Draw", "Vitória win"))) %>%
ggplot(aes(x = Minute, y = Probability, col = Result)) +
geom_line(linewidth = 1) +
geom_vline(xintercept = 7, linetype = "dashed") +
geom_vline(xintercept = 16, linetype = "dashed") +
geom_vline(xintercept = 58, linetype = "dashed", col = "red") +
geom_vline(xintercept = 59, linetype = "dashed", col = "red") +
geom_vline(xintercept = 82, linetype = "dashed", col = "red") +
geom_vline(xintercept = 20, linetype = "dotted", col = "black") +
scale_x_continuous(breaks = c(0, 15, 30, 45, 60, 75, 90), limits = c(0, 90)) +
scale_y_continuous(breaks = c(0, 0.25, 0.5, 0.75), limits = c(0, 1)) +
scale_color_manual(values = c("black", "gray55", "red")) +
theme(legend.position = c(0.83, 0.98),
legend.justification = c(1, 1),
legend.background = element_rect(fill = "white", color = "black"))
p
ggsave(filename = paste0("plots/Ponte Preta x Vitória.png"),
plot = p, width = 10, height = 5, dpi = 300)
?R.version
R.Version()
version(dplyr)
Version(dplyr)
packageVersion(dplyr)
packageVersion("dplyr")
The analysis were run in R 4.3.1 using the packages `dplyr`
packageVersion("stringr")
packageVersion("tidyr")
packageVersion("ggplot2")
packageVersion("ggrepel")
packageVersion("grid")
packageVersion("gridExtra")
packageVersion("knitr")
packageVersion("xtable")
packageVersion("future.apply")
packageVersion("progress")
packageVersion("CVXR")
packageVersion("Rmosek")
packageVersion("fastDummies")
