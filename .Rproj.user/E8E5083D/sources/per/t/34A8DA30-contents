---
title: "Exploratory Data Analysis"
output: html_document
---

```{r, warning = FALSE, message = FALSE}
library(dplyr)
library(ggplot2)

load("raw-data/results.RData")
load("raw-data/events.RData")
load("raw-data/intervals.RData")
```

# Datasets

+ Matches, goals, red cards: https://www.flashscore.com.br/. Ignored red cards for coaches and players on the bench.

+ Stoppage time: "sÃºmulas" https://www.cbf.com.br/.

+ Market value: https://www.transfermarkt.com/.

# Basic data
```{r}
nrow(results) # 3039 matches

length(unique(results$season)) # 8 seasons

min(results$season)
max(results$season) # from 2015 to 2022

sum(results$home_goals + results$away_goals) # 7126 goals

events %>%
  filter(event == "goal",
         team == "home") %>%
  nrow() # 4248 home goals

events %>%
  filter(event == "goal",
         team == "away") %>%
  nrow() # 2878 away goals

events %>%
  filter(event == "red card") %>%
  nrow() # 715 red cards (eram 717)

events %>%
  filter(event == "red card",
         team == "home") %>%
  nrow() # 283 home red cards (eram 283)

events %>%
  filter(event == "red card",
         team == "away") %>%
  nrow() # 432 away red cards (eram 434)
```

# Goals

Probabilities for home, draw, away
```{r}
N = nrow(results)

results %>%
  mutate(result = ifelse(home_goals > away_goals, "Home",
                         ifelse(home_goals == away_goals, "Draw", "Away"))) %>%
  count(result) %>%
  mutate(p = n/N)
```

Most common scores
```{r}
d = results %>%
  mutate(Score = paste0(home_goals, "-", away_goals)) %>%
  count(Score) %>%
  arrange(desc(n)) %>%
  mutate(p = n/N)

d

other = sum(d$p[11:nrow(d)])

other

p = d %>%
  head(10) %>%
  select(-n) %>%
  rbind(tibble(Score = "Other", p = other)) %>%
  mutate(Score = factor(Score, levels = Score)) %>%
  ggplot(aes(y = p, x = Score)) +
  geom_bar(position = "dodge", stat = "identity", fill = "#F8766D") +
  ylab("Relative frequency")

p

#ggsave(filename = paste0("plots/scores.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Number of goals for home/away teams
```{r}
home = results %>%
  count(home_goals) %>%
  mutate(Team = "Home") %>%
  rename(Goals = home_goals)

away = results %>%
  count(away_goals) %>%
  mutate(Team = "Away") %>%
  rename(Goals = away_goals)

df = rbind(home, away) %>%
  mutate(p = n/N,
         Team = factor(Team, levels = c("Home", "Away"))) %>%
  select(Team, Goals, n, p)

df

p = df %>%
  ggplot(aes(fill = Team, y = p, x = Goals)) +
  geom_bar(position = "dodge", stat = "identity") +
  ylab("Relative Frequency") +
  scale_x_continuous(breaks = 0:6) +
  theme(legend.position = c(0.95, 0.95),
  legend.justification = c(1, 1),
  legend.background = element_rect(fill = "white", color = "black"))
p

#ggsave(filename = paste0("plots/marginal scores.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Mean goals by season
```{r}
goals_by_season = results %>%
  group_by(season) %>%
  summarise(home = mean(home_goals),
            away = mean(away_goals))

p = tibble(Team = factor(c(rep("Home", nrow(goals_by_season)), rep("Away", nrow(goals_by_season))), levels = c("Home", "Away")),
           Season = rep(goals_by_season$season, 2),
           Mean = c(goals_by_season$home, goals_by_season$away)) %>%
  ggplot(aes(x = Season, y = Mean, col = Team)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  ylab("Mean goals per match") +
  ylim(0, 1.5) +
  scale_x_continuous(breaks = 2015:2022)

p

#ggsave(filename = paste0("plots/goals by season.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Goal rate per minute
```{r}
p = events %>%
  filter(event == "goal",
         time <= 45) %>%
  count(time, half, team) %>%
  mutate(rate = n/N,
         time = ifelse(half == 2, time + 45, time),
         Team = factor(ifelse(team == "home", "Home", "Away"), levels = c("Home", "Away"))) %>%
  ggplot(aes(x = time, y = rate, col = Team)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  ylab("Goal rate") +
  scale_x_continuous(breaks = seq(from = 0, to = 90, by = 5)) +
  xlab("Minute") +
  theme(legend.position = c(0.95, 0.05),
  legend.justification = c(1, 0),
  legend.background = element_rect(fill = "white", color = "black"))

p

ggsave(filename = paste0("plots/goal rate.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Goals scored in stoppage time
```{r}
goals = events %>%
  filter(event == "goal")

total_goals = nrow(goals)
total_goals

goals_st1 = goals %>%
  filter(half == 1, time > 45) %>% 
  nrow()
goals_st1

goals_st2 = goals %>%
  filter(half == 2, time > 45) %>% 
  nrow()
goals_st2

goals_st1/total_goals

goals_st2/total_goals
```


# Red cards

Red card rate per minute
```{r}
red_cards = events %>%
  filter(event == "red card",
         time <= 45) %>%
  count(time, half, team) %>%
  mutate(time = ifelse(half == 2, time + 45, time)) %>%
  select(-half)

tib_zeros = tibble(time = c(1:90, 1:90),
                   team = c(rep("home", 90), rep("away", 90)), n = 0L)

complete_zeros <- function(tib_count) {
  tib_count %>%
    full_join(tib_zeros, by = c("team", "time", "n")) %>%
    group_by(team, time) %>%
    summarise(n = sum(n)) 
}

p = red_cards %>%
  complete_zeros() %>%
  mutate(rate = n/N,
         Team = factor(ifelse(team == "home", "Home", "Away"), levels = c("Home", "Away"))) %>%
  ggplot(aes(x = time, y = rate, col = Team)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  ylab("Red card rate") +
  scale_x_continuous(breaks = seq(from = 0, to = 90, by = 5)) +
  xlab("Minute") +
  theme(legend.position = c(0.05, 0.95),
  legend.justification = c(0, 1),
  legend.background = element_rect(fill = "white", color = "black"))

p

ggsave(filename = paste0("plots/red card rate.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Number of red cards for home/away teams
```{r}
df = events %>%
  filter(event == "red card") %>%
  group_by(match) %>%
  count(team, name = "Red cards") %>%
  group_by(team) %>%
  count(`Red cards`)

df_aux = tibble(team = c("home", "away", "home"), 
                `Red cards` = c(0, 0, 3), 
                n = c(N -sum(df$n[which(df$team == "home")]),
                      N - sum(df$n[which(df$team == "away")]),
                      0))

df = rbind(df, df_aux) %>%
  mutate(p = n/N) %>%
  arrange(desc(team), `Red cards`) %>%
  ungroup() %>%
  mutate(team = factor(ifelse(team == "home", "Home", "Away"), levels = c("Home", "Away"))) %>%
  rename(Team = team)

df

p = df %>%
  ggplot(aes(fill = Team, y = p, x = `Red cards`)) +
  geom_bar(position = "dodge", stat = "identity") +
  ylab("Relative Frequency") +
  scale_x_continuous(breaks = 0:3)

p

#ggsave(filename = paste0("plots/marginal red cards.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Mean red cards by season
```{r}
results2 = intervals %>%
  group_by(match, season) %>%
  summarise(home_red_cards = sum(home_red_card),
            away_red_cards = sum(away_red_card))

red_cards_by_season = results2 %>%
  group_by(season) %>%
  summarise(home = mean(home_red_cards),
            away = mean(away_red_cards))

p = tibble(Team = factor(c(rep("Home", nrow(red_cards_by_season)), rep("Away", nrow(red_cards_by_season))), levels = c("Home", "Away")),
           Season = rep(red_cards_by_season$season, 2),
           Mean = c(red_cards_by_season$home, red_cards_by_season$away)) %>%
  ggplot(aes(x = Season, y = Mean, col = Team)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  ylab("Mean red cards per match") +
  ylim(0, 0.2) +
  scale_x_continuous(breaks = 2015:2022)

p

#ggsave(filename = paste0("plots/red cards by season.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
red_ids_home = events %>% 
  filter(event == "red card",
         team == "home") %>% 
  .$match %>% 
  as.vector() %>%
  unique()

results = results %>%
  mutate(`Matches` = ifelse(match %in% red_ids_home, "With home red card", "Without home red card"),
         `dif` = home_goals - away_goals)

p = results %>%
  group_by(`Matches`) %>%
  count(dif) %>%
  mutate(d = ifelse(Matches == "With home red card", length(red_ids_home), N - length(red_ids_home)),
         p = n/d) %>%
  rbind(tibble(Matches = "With home red card", dif = 4, n = NA, d = NA, p = 0)) %>%
  ggplot(aes(fill = `Matches`, y = p, x = dif)) +
  geom_bar(position = "dodge", stat = "identity") +
  ylab("Relative Frequency") +
  scale_x_continuous(breaks = -4:4, limits = c(-4, 4)) +
  xlab("Home goals - away goals")

p

#ggsave(filename = paste0("plots/with home red card.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
red_ids_home_1 = events %>% 
  filter(event == "red card",
         team == "home",
         half == 1) %>% 
  .$match %>% 
  as.vector() %>%
  unique()

results = results %>%
  mutate(`Matches` = ifelse(match %in% red_ids_home_1, "With home red card in first half", "Without home red card in first half"),
         `dif` = home_goals - away_goals)

p = results %>%
  group_by(`Matches`) %>%
  count(dif) %>%
  mutate(d = ifelse(Matches == "With home red card in first half", length(red_ids_home_1), N - length(red_ids_home_1)),
         p = n/d) %>%
  rbind(tibble(Matches = "With home red card in first half", dif = 4, n = NA, d = NA, p = 0)) %>%
  ggplot(aes(fill = `Matches`, y = p, x = dif)) +
  geom_bar(position = "dodge", stat = "identity") +
  ylab("Relative Frequency") +
  scale_x_continuous(breaks = -4:4, limits = c(-4, 4)) +
  xlab("Home goals - away goals")

p

#ggsave(filename = paste0("plots/with home red card in first half.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
red_ids_home_2 = events %>% 
  filter(event == "red card",
         team == "home",
         half == 2) %>% 
  .$match %>% 
  as.vector() %>%
  unique()

results = results %>%
  mutate(`Matches` = ifelse(match %in% red_ids_home_2, "With home red card in second half", "Without home red card in second half"),
         `dif` = home_goals - away_goals)

p = results %>%
  group_by(`Matches`) %>%
  count(dif) %>%
  mutate(d = ifelse(Matches == "With home red card in second half", length(red_ids_home_2), N - length(red_ids_home_2)),
         p = n/d) %>%
  rbind(tibble(Matches = "With home red card in second half", dif = 4, n = NA, d = NA, p = 0)) %>%
  ggplot(aes(fill = `Matches`, y = p, x = dif)) +
  geom_bar(position = "dodge", stat = "identity") +
  ylab("Relative Frequency") +
  scale_x_continuous(breaks = -4:4, limits = c(-4, 4)) +
  xlab("Home goals - away goals")

p

#ggsave(filename = paste0("plots/with home red card in second half.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
red_ids_away = events %>% 
  filter(event == "red card",
         team == "away") %>% 
  .$match %>% 
  as.vector() %>%
  unique()

results = results %>%
  mutate(`Matches` = ifelse(match %in% red_ids_away, "With away red card", "Without away red card"),
         `dif` = home_goals - away_goals)

p = results %>%
  group_by(`Matches`) %>%
  count(dif) %>%
  mutate(d = ifelse(Matches == "With away red card", length(red_ids_away), N - length(red_ids_away)),
         p = n/d) %>%
  rbind(tibble(Matches = "With away red card", dif = -3, n = NA, d = NA, p = 0)) %>%
  ggplot(aes(fill = `Matches`, y = p, x = dif)) +
  geom_bar(position = "dodge", stat = "identity") +
  ylab("Relative Frequency") +
  scale_x_continuous(breaks = -4:4, limits = c(-4, 4)) +
  xlab("Home goals - away goals")

p

#ggsave(filename = paste0("plots/with away red card.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
red_ids_away_1 = events %>% 
  filter(event == "red card",
         team == "away",
         half == 1) %>% 
  .$match %>% 
  as.vector() %>%
  unique()

results = results %>%
  mutate(`Matches` = ifelse(match %in% red_ids_away, "With away red card in first half", "Without away red card in first half"),
         `dif` = home_goals - away_goals)

p = results %>%
  group_by(`Matches`) %>%
  count(dif) %>%
  mutate(d = ifelse(Matches == "With away red card in first half", length(red_ids_away_1), N - length(red_ids_away_1)),
         p = n/d) %>%
  rbind(tibble(Matches = "With away red card in first half", dif = -3, n = NA, d = NA, p = 0)) %>%
  ggplot(aes(fill = `Matches`, y = p, x = dif)) +
  geom_bar(position = "dodge", stat = "identity") +
  ylab("Relative Frequency") +
  scale_x_continuous(breaks = -4:4, limits = c(-4, 4)) +
  xlab("Home goals - away goals")

p

#ggsave(filename = paste0("plots/with away red card in first half.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
red_ids_away_2 = events %>% 
  filter(event == "red card",
         team == "away",
         half == 2) %>% 
  .$match %>% 
  as.vector() %>%
  unique()

results = results %>%
  mutate(`Matches` = ifelse(match %in% red_ids_away, "With away red card in second half", "Without away red card in second half"),
         `dif` = home_goals - away_goals)

p = results %>%
  group_by(`Matches`) %>%
  count(dif) %>%
  mutate(d = ifelse(Matches == "With away red card in second half", length(red_ids_away_2), N - length(red_ids_away_2)),
         p = n/d) %>%
  rbind(tibble(Matches = "With away red card in second half", dif = -3, n = NA, d = NA, p = 0)) %>%
  ggplot(aes(fill = `Matches`, y = p, x = dif)) +
  geom_bar(position = "dodge", stat = "identity") +
  ylab("Relative Frequency") +
  scale_x_continuous(breaks = -4:4, limits = c(-4, 4)) +
  xlab("Home goals - away goals")

p

#ggsave(filename = paste0("plots/with away red card in second half.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
red_cards_by_match_home = events %>%
  filter(event == "red card",
         team == "home") %>%
  group_by(match) %>%
  count(event, name = "home_red_cards") %>%
  arrange(match) %>%
  select(-event)

red_cards_by_match_away = events %>%
  filter(event == "red card",
         team == "away") %>%
  group_by(match) %>%
  count(event, name = "away_red_cards") %>%
  arrange(match) %>%
  select(-event)

results = results %>%
  left_join(red_cards_by_match_home) %>%
  left_join(red_cards_by_match_away)

results$home_red_cards[is.na(results$home_red_cards)] = 0
results$away_red_cards[is.na(results$away_red_cards)] = 0

results$red_card_diff = results$home_red_cards - results$away_red_cards

results$red_card_diff2 = case_when(results$red_card_diff >= 1 ~ 1,
                                   results$red_card_diff == 0 ~ 0,
                                   results$red_card_diff <= -1 ~ -1)

d = results %>%
  count(red_card_diff2, name = "d")

p = results %>%
  group_by(red_card_diff2) %>%
  count(dif) %>%
  left_join(d) %>%
  mutate(p = n/d,
         red_card_diff2 = as.factor(red_card_diff2)) %>%
  rbind(tibble(red_card_diff2 = factor(c(-1, -1, -1, -1, -1, 1, 1, 1)), dif = c(-3, -4, -5, 5, 6, 4, 5, 6), n = NA, d = NA, p = 0)) %>%
  ggplot(aes(fill = red_card_diff2, y = p, x = dif)) +
  geom_bar(position = "dodge", stat = "identity") +
  ylab("Relative Frequency") +
  scale_x_continuous(breaks = -4:4, limits = c(-4, 4)) +
  xlab("Home goals - away goals") +
  scale_fill_discrete(name = "Home red cards \n- away red cards",
    labels = c("-1" = "-1 or less", "0" = "0", "1" = "1 or more")) +
  theme(legend.title.align = 0.5) +
      theme(legend.position = c(0.05, 0.95),
  legend.justification = c(0, 1),
  legend.background = element_rect(fill = "white", color = "black"))

p

ggsave(filename = paste0("plots/red card diff in goal diff.png"), plot = p, width = 10, height = 5, dpi = 300)
```

# Stoppage time

Stoppage time first half
```{r}
p = results %>%
  mutate(st1 = ifelse(st1 > 10, 10, st1)) %>%
  count(st1) %>%
  mutate(p = n/N) %>%
  ggplot(aes(x = st1, y = p)) +
  geom_bar(position = "dodge", stat = "identity") +
  xlab("Stoppage time") +
  ylab("Relative frequency") +
  scale_x_continuous(breaks = 0:10,
                     labels = c(0:9, "10+"))

p

#ggsave(filename = paste0("plots/stoppage time 1.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Stoppage time second half
```{r}
p = results %>%
  mutate(st2 = ifelse(st2 > 10, 10, st2)) %>%
  count(st2) %>%
  mutate(p = n/N) %>%
  ggplot(aes(x = st2, y = p)) +
  geom_bar(position = "dodge", stat = "identity") +
  xlab("Stoppage time") +
  ylab("Relative frequency") +
  scale_x_continuous(breaks = 0:10,
                     labels = c(0:9, "10+"))

p

#ggsave(filename = paste0("plots/stoppage time 2.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Stoppage time both halves
```{r}
df1 = results %>%
  mutate(st = ifelse(st1 > 10, 10, st1)) %>%
  count(st) %>%
  mutate(p = n/N,
         Half = "1st") 

df2 = results %>%
  mutate(st = ifelse(st2 > 10, 10, st2)) %>%
  count(st) %>%
  mutate(p = n/N,
         Half = "2nd")

df = rbind(df1, df2) %>%
  select(Half, st, n, p)

df

p = df %>%
  ggplot(aes(fill = Half, y = p, x = st)) +
  geom_bar(position = "dodge", stat = "identity") +
  ylab("Relative Frequency") +
  xlab("Stoppage time") +
  scale_x_continuous(breaks = 0:10,
                     labels = c(0:9, "10+")) +
    theme(legend.position = c(0.95, 0.95),
  legend.justification = c(1, 1),
  legend.background = element_rect(fill = "white", color = "black"))

p

ggsave(filename = paste0("plots/stoppage time.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Mean stoppage time by season
```{r}
st_means = results %>%
  group_by(season) %>%
  summarise(st1 = mean(st1),
            st2 = mean(st2))

p = tibble(Half = c(rep("1st", nrow(st_means)), rep("2nd", nrow(st_means))),
           Season = rep(st_means$season, 2),
           Mean = c(st_means$st1, st_means$st2)) %>%
  ggplot(aes(x = Season, y = Mean, col = Half)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  ylab("Mean stoppage time") +
  ylim(0, 6) +
  scale_x_continuous(breaks = 2015:2022)

p

#ggsave(filename = paste0("plots/stoppage time by season.png"), plot = p, width = 10, height = 5, dpi = 300)
```

# Value of the teams

Table: mean value per team and number of seasons
```{r}
n_home = results %>%
  count(home_team) %>%
  rename(Team = home_team,
         n_home = n)

n_away = results %>%
  count(away_team) %>%
  rename(Team = away_team,
         n_away = n)

sum_home = results %>%
  group_by(home_team) %>%
  summarise(sum_home = sum(home_team_market_value)) %>%
  rename(Team = home_team)

sum_away = results %>%
  group_by(away_team) %>%
  summarise(sum_away = sum(away_team_market_value)) %>%
  rename(Team = away_team)

t = inner_join(n_home, n_away) %>%
  inner_join(sum_home) %>%
  inner_join(sum_away) %>%
  mutate(`Mean market value` = (sum_home + sum_away) / (n_home + n_away),
         Seasons = as.integer(round(n_home/19)),
         `Mean market value` = round(`Mean market value`/10^6, 2)) %>%
  arrange(desc(`Mean market value`)) %>%
  select(Team, `Mean market value`, Seasons)

load("raw-data/mean_position.RData")

t = inner_join(t, mean_position)

knitr::kable(t)

xtable::xtable(t)

load("data/mod4.RData")

alpha_beta = tibble(Team = names(mod4$alpha), Attack = exp(mod4$alpha), Defence = exp(mod4$beta)) %>%
  mutate(`Attack/Defense` = Attack/Defence) %>%
  arrange(desc(`Attack/Defense`))

t = inner_join(t, alpha_beta)

p = ggplot(t, aes(x = `Mean market value`, y = `Mean position`, label = Team)) +
  geom_point() +
  ggrepel::geom_text_repel(size = 2.5, seed = 27) +
  scale_y_reverse()
p
#ggsave(filename = paste0("plots/market value x position.png"), plot = p, width = 10, height = 5, dpi = 300)

p = ggplot(t, aes(x = `Attack/Defense`, y = `Mean position`, label = Team)) +
  geom_point() +
  ggrepel::geom_text_repel(size = 2.5, seed = 27) +
  scale_y_reverse()
p
ggsave(filename = paste0("plots/attackdefense x position.png"), plot = p, width = 10, height = 5, dpi = 300)

p = ggplot(t, aes(x = `Attack/Defense`, y = `Mean market value`, label = Team)) +
  geom_point() +
  ggrepel::geom_text_repel(size = 2.5, seed = 27)
p
#ggsave(filename = paste0("plots/attackdefense x market value.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Difference in the logs of the values and goals scored by the home team
```{r}
results$diff_log = log(results$home_team_market_value) - log(results$away_team_market_value)

p = results %>%
  ggplot(aes(x = as.factor(home_goals), y = diff_log)) +
  geom_boxplot() +
  xlab("Home goals") +
  ylab("log of home team market value - log of away team market value")

p

#ggsave(filename = paste0("plots/market value diff home goals.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Difference in the logs of the values and goals scored by the away team
```{r}
p = results %>%
  ggplot(aes(x = as.factor(away_goals), y = diff_log)) +
  geom_boxplot() +
  xlab("Away goals") +
  ylab("log of home team market value - log of away team market value")

p

#ggsave(filename = paste0("plots/market value diff away goals.png"), plot = p, width = 10, height = 5, dpi = 300)
```

Difference in the logs of the values and goals scored by both teams
```{r}
df1 = results %>%
  select(diff_log, home_goals) %>%
  rename(Goals = home_goals) %>%
  mutate(Team = "Home")

df2 = results %>%
  select(diff_log, away_goals) %>%
  rename(Goals = away_goals) %>%
  mutate(Team = "Away")

df = rbind(df1, df2) %>%
  mutate(Team = factor(Team, levels = c("Home", "Away")))

p = df %>%
  ggplot(aes(x = as.factor(Goals), y = diff_log, fill = Team)) +
  geom_boxplot() +
  xlab("Goals") +
  ylab("log of home team market value - log of away team market value") +
  coord_flip()

p

#ggsave(filename = paste0("plots/market value diff goals.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
p = df %>%
  filter(Team == "Home") %>%
  ggplot(aes(x = as.factor(Goals), y = diff_log)) +
  geom_boxplot(fill = "#F8766D") +
  xlab("Home team goals") +
  ylab("log of home team market value - log of away team market value") +
  coord_flip()

p

#ggsave(filename = paste0("plots/market value diff goals home.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
p = df %>%
  filter(Team == "Away") %>%
  ggplot(aes(x = as.factor(Goals), y = diff_log)) +
  geom_boxplot(fill = "#00BFC4") +
  xlab("Away team goals") +
  ylab("log of home team market value - log of away team market value") +
  coord_flip()

p

#ggsave(filename = paste0("plots/market value diff goals away.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
p = results %>%
  mutate(goal_diff = home_goals - away_goals) %>%
  ggplot(aes(x = as.factor(goal_diff), y = diff_log)) +
  #geom_boxplot() +
  geom_boxplot(fill = "#F8766D") +
  xlab("Home goals - away goals") +
  ylab("log of home team market value - log of away team market value") +
  coord_flip()

p

#ggsave(filename = paste0("plots/goal diff vs market value diff.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
p = results %>%
  mutate(goal_diff = home_goals - away_goals) %>%
  filter(goal_diff >= -3, goal_diff <= 3) %>%
  ggplot(aes(x = as.factor(goal_diff), y = diff_log)) +
  #geom_boxplot() +
  geom_boxplot(fill = "#F8766D") +
  xlab("Home goals - away goals") +
  ylab("log of home team market value - log of away team market value") +
  coord_flip()

p

ggsave(filename = paste0("plots/goal diff vs market value diff 3.png"), plot = p, width = 10, height = 5, dpi = 300)
```

```{r}
p = results %>%
  mutate(goal_diff = home_goals - away_goals,
         binned_x = cut_width(diff_log, width = 1, boundary = 0)) %>%
  ggplot(aes(x = binned_x, y = goal_diff)) +
  geom_boxplot(fill = "#F8766D") +
  xlab("log of home team market value - log of away team market value") +
  ylab("Home goals - away goals") +
  scale_y_continuous(breaks = -5:6)

p

#ggsave(filename = paste0("plots/goal diff vs market value diff bin.png"), plot = p, width = 10, height = 5, dpi = 300)
```
